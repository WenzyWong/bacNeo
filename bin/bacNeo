#!/bin/bash
DB=""
BACC_DIR=""
TAXONOMY=""
METHOD=""
THREADS=16

print_logo() {
  echo -e "\e[36m"
  echo '
               _                 _   _            
              | |               | \ | |           
              | |__   __ _  ___ |  \| | ___  ___  
              | `_ \ / _` |/ __|| . ` |/ _ \/ _ \ 
              | |_) | (_| | (__ | |\  |  __/ (_) |
              |____/ \__,_|\___||_| \_|\___|\___/
  '
  echo -e "\e[0m"
}

usage() {    
    print_logo                             # Function: Print a help message.
    echo "Usage: bacNeo [ --download-db DB -t THREADS | --extract-matrix -d DIR -l LEVEL -m METHOD ]
    --download-db       The path you would like to put reference databases into
    -t                  Number of threads (Default threads = 16)
    --extract-matrix    Extract matrix using specified parameters
    -d, --dir           Directory path for matrix extraction
    -l, --level         Taxonomic level for calculation
    -m, --method        Normalization method name, including 'raw_count', 'CPM', and 'abundance'
    -h, --help          Show this help message
    " 1>&2 
}
exit_abnormal() {                         # Function: Exit with error.
  usage
  exit 1
}

download_database() {
    local db_path="$1"

    mkdir -p "${db_path}"
    echo -e "\033[46;37m>> STEP 0: Start downloading bacteiral filtering reference into: ${db_path} \033[0m"
    checkm2 database --download --path "${db_path}"
    echo -e "\033[46;37m>> Finish downloading bacteiral filtering reference. \033[0m"

    mkdir -p "${db_path}/bac_na"
    echo -e "\033[46;37m>> STEP 1: Start downloading bacterial database (nucleic acid sequence reference) into: ${db_path}/bac_na \033[0m"
    echo -e "Note: this step may take a long time due to kraken2 database checking processes"
    kraken2-build --download-taxonomy --download-library bacteria --db "${db_path}/bac_na" --threads "${THREADS}"
    kraken2-build --build --db "${db_path}/bac_na"
    echo -e "\033[46;37m>> Finish downloading bacterial database (nucleic acid sequence reference). \033[0m"
}

extract_matrix() {
    BACNEO_PATHS=$(echo "${PATH}" | tr ':' '\n' | grep 'bacNeo' | uniq | xargs dirname)

    while read -r tmp_path; do
        if [ -f "${tmp_path}/bacNeo.yml" ] && [ -d "${tmp_path}/bin" ]; then
            BACNEO="${tmp_path}"
            break
        fi
    done <<< "${BACNEO_PATHS}"

    if [ -z "${BACNEO}" ]; then
        echo "The bacNeo path with the correct file structure was not found!"
        exit 1
    else
        echo "The bacNeo path found is: ${BACNEO}"
    fi

    Rscript "${BACNEO}/utils/bacNeo_matrix.R" -d "${BACC_DIR}" -l "${TAXONOMY}" -m "${METHOD}"
}

main() {
    # If there is no parameter, return help
    if [ $# -eq 0 ]; then
        usage
        exit 1
    fi

    # Flag to track if extract_matrix is called
    local extract_mode=false

    # Parses command-line arguments
    while [ $# -gt 0 ]; do
        case "$1" in
            --download-db)
                if "${extract_mode}"; then
                    echo "ERROR: Cannot use --download-db with --extract-matrix"
                    exit_abnormal
                fi
                if [ -z "$2" ]; then
                    echo "ERROR: --download-db requires a given path"
                    exit_abnormal
                fi
                DB="$2"
                download_database "${DB}"
                shift 2
                ;;
            -t)
                if "${extract_mode}"; then
                    echo "ERROR: Cannot use --download-db with --extract-matrix"
                    exit_abnormal
                fi
                if [ -z "$2" ]; then
                    echo "ERROR: --download-db requires a given path"
                    exit_abnormal
                fi
                THREADS="$2"
                shift 2
                ;;
            --extract-matrix)
                if [ ! -z "${DB}" ]; then
                    echo "ERROR: Cannot use --extract-matrix with --download-db"
                    exit_abnormal
                fi
                extract_mode=true
                shift
                ;;
            -d|--dir)
                if [ -z "$2" ]; then
                    echo "ERROR: -d/--dir requires a directory path"
                    exit_abnormal
                fi
                BACC_DIR="$2"
                shift 2
                ;;
            -l|--level)
                if [ -z "$2" ]; then
                    echo "ERROR: -l/--level requires a taxonomic level"
                    exit_abnormal
                fi
                TAXONOMY="$2"
                shift 2
                ;;
            -m|--method)
                if [ -z "$2" ]; then
                    echo "ERROR: -m/--method requires a method name"
                    exit_abnormal
                fi
                METHOD="$2"
                shift 2
                ;;
            -h|--help)
                usage
                exit 0
                ;;
            *)
                echo "EROOR: Unkown parameter $1"
                exit_abnormal
                ;;
        esac
    done

    if "${extract_mode}"; then
        if [ -z "${BACC_DIR}" ] || [ -z "${TAXONOMY}" ] || [ -z "${METHOD}" ]; then
            echo "ERROR: --extract-matrix requires -d/--dir, -l/--level, and -m/--method parameters"
            exit_abnormal
        fi
        extract_matrix
    fi
}

main "$@"